package ru.webfester.parser;

import java.awt.HeadlessException;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.Preferences;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

public class Frame extends javax.swing.JFrame {

    String projectDirectory;

    public Frame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textSelectFileURL = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        buttonSelectFileURLs = new javax.swing.JButton();
        progressBarStatus = new javax.swing.JProgressBar();
        labelStatus = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        labelParsURL = new javax.swing.JLabel();
        buttonStart = new javax.swing.JButton();
        textSubr = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        labelTimeEnd = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        deliveryText = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        JLabelCategorID = new javax.swing.JLabel();
        categoryIdText = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        vendorText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        priceText = new javax.swing.JTextField();
        currencyIdText = new javax.swing.JTextField();
        pictureText = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        paramKeyText = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        descriptionText = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        paramText = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        paramValueText = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        urlTestText = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        priceDataPriceText = new javax.swing.JTextField();
        priceSizeText = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        testButton = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        menuEdit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JavaParser по стандартам Яндекс.Маркет от Samar");
        setBackground(new java.awt.Color(255, 255, 255));

        textSelectFileURL.setToolTipText("");
        textSelectFileURL.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textSelectFileURLFocusLost(evt);
            }
        });

        jLabel1.setText("Путь к файлу с ссылками");

        buttonSelectFileURLs.setText("Обзор");
        buttonSelectFileURLs.setToolTipText("");
        buttonSelectFileURLs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSelectFileURLsActionPerformed(evt);
            }
        });

        progressBarStatus.setToolTipText("");

        labelStatus.setText("0%");
        labelStatus.setToolTipText("");

        jLabel3.setText("Парсинг:");

        labelParsURL.setText("http://");

        buttonStart.setText("Начать парсинг");
        buttonStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonStartActionPerformed(evt);
            }
        });

        textSubr.setText("\\n");

        jLabel4.setText("Разделительный символ");

        jButton3.setText("Остановить");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        labelTimeEnd.setText("Осталось:");

        jLabel13.setText("<delivery>");

        deliveryText.setMinimumSize(new java.awt.Dimension(59, 20));
        deliveryText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deliveryTextMouseClicked(evt);
            }
        });

        jLabel14.setText("Пример: просто true или false");

        JLabelCategorID.setText("<categoryId>");

        categoryIdText.setMinimumSize(new java.awt.Dimension(59, 20));
        categoryIdText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                categoryIdTextMouseClicked(evt);
            }
        });

        jLabel16.setText("Пример: nav.nav.js-catalog-menu menu.header-main-menu li.active");
        jLabel16.setToolTipText("nav.nav.js-catalog-menu menu.header-main-menu li.active.has-sub-items.js-load-on-hover a span");

        jLabel5.setText("<name>");

        jLabel17.setText("<vendor>");

        jLabel6.setText("<price>массив");

        jLabel18.setText("Пример: title");

        vendorText.setMinimumSize(new java.awt.Dimension(59, 20));
        vendorText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vendorTextMouseClicked(evt);
            }
        });

        jLabel7.setText("<currencyId>");

        jLabel8.setText("<picture>массив или одну картинку");

        jLabel9.setText("Пример: #sku-variants option");

        nameText.setMinimumSize(new java.awt.Dimension(59, 20));
        nameText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nameTextMouseClicked(evt);
            }
        });

        priceText.setMinimumSize(new java.awt.Dimension(59, 20));
        priceText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                priceTextMouseClicked(evt);
            }
        });

        currencyIdText.setMinimumSize(new java.awt.Dimension(59, 20));
        currencyIdText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                currencyIdTextMouseClicked(evt);
            }
        });

        pictureText.setMinimumSize(new java.awt.Dimension(59, 20));
        pictureText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pictureTextMouseClicked(evt);
            }
        });

        jLabel23.setText("<param name=\"");

        jLabel10.setText("Пример: div.page-header-inner h1");

        paramKeyText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paramKeyTextMouseClicked(evt);
            }
        });

        jLabel11.setText("Пример: вводим валюту RUB или USD как вам угодно");

        jLabel24.setText("Пример: th");

        jLabel12.setText("Пример: div.viewer-wrapper.hidden-xs img");

        jLabel19.setText("<description>");

        descriptionText.setMinimumSize(new java.awt.Dimension(59, 20));
        descriptionText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                descriptionTextMouseClicked(evt);
            }
        });

        jLabel20.setText("Пример: label.clearfix .description");

        jLabel21.setText("Массив с характеристиками");

        paramText.setMinimumSize(new java.awt.Dimension(59, 20));
        paramText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paramTextMouseClicked(evt);
            }
        });

        jLabel22.setText("Пример: .tab-pane.simple-shadow.collapse.characteristics tr");

        paramValueText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paramValueTextMouseClicked(evt);
            }
        });

        jLabel26.setText("Пример: td");

        jLabel25.setText("\">");

        jLabel27.setText("</param>");

        jLabel28.setBackground(new java.awt.Color(0, 0, 0));
        jLabel28.setForeground(new java.awt.Color(255, 51, 51));
        jLabel28.setText("<html>Пример основан на указной странице /\\ (изучайте исходник и пробуйте)<br> Программа работает по типу выборке элементов HTML как в библиотеки JQuery для JavaScript (Google помощь) ");
        jLabel28.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        urlTestText.setText("https://ormatek.com/catalog/mattress/product/optima-lux-evs/160-200-cotton-double/");

        jLabel15.setText("Ссылка для теста");

        priceDataPriceText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                priceDataPriceTextMouseClicked(evt);
            }
        });

        priceSizeText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                priceSizeTextMouseClicked(evt);
            }
        });

        jLabel29.setText("Селектор цены пример:  option[dataprice]");

        jLabel30.setText("< Селектор размера пример: option[value]");

        testButton.setText("Тест");
        testButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testButtonActionPerformed(evt);
            }
        });

        jTextField1.setText("jTextField1");

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        menuFile.setText("Файл");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Открыть проект");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menuFile.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Сохранить проект");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        menuFile.add(jMenuItem2);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("JSON to XML");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        menuFile.add(jMenuItem4);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("JSON to CSV");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        menuFile.add(jMenuItem5);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setText("Ссылки с JSON");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        menuFile.add(jMenuItem6);
        menuFile.add(jSeparator1);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem3.setText("Выход");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        menuFile.add(jMenuItem3);

        jMenuBar1.add(menuFile);

        menuEdit.setText("Правка");
        jMenuBar1.add(menuEdit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(JLabelCategorID, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(priceDataPriceText)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(priceSizeText))
                            .addComponent(deliveryText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(categoryIdText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(vendorText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nameText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(priceText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(currencyIdText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pictureText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(descriptionText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(paramText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(paramKeyText, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                        .addGap(2, 2, 2)
                                        .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel24))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                                        .addComponent(jLabel26)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(paramValueText)))))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addComponent(jLabel30)
                            .addComponent(jLabel14)
                            .addComponent(jLabel16)
                            .addComponent(jLabel18)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel20)
                            .addComponent(jLabel22))
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelParsURL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(urlTestText)
                        .addGap(18, 18, 18)
                        .addComponent(testButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textSelectFileURL, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonSelectFileURLs)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textSubr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonStart))
                                    .addComponent(labelTimeEnd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(progressBarStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelStatus)))
                        .addContainerGap(23, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textSelectFileURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonSelectFileURLs)
                    .addComponent(textSubr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(priceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(priceDataPriceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceSizeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currencyIdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pictureText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(deliveryText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLabelCategorID)
                    .addComponent(categoryIdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vendorText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(descriptionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paramText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paramKeyText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(paramValueText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel27))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jLabel26))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(urlTestText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(testButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonStart)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelTimeEnd)
                            .addComponent(labelStatus))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(labelParsURL)))
                    .addComponent(progressBarStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String fileLinks = null;

    private void buttonSelectFileURLsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSelectFileURLsActionPerformed
        JFileChooser fileopen = new JFileChooser();
        if (projectDirectory != null) {
            fileopen.setCurrentDirectory(new File(projectDirectory));
        } else {
            fileopen.setCurrentDirectory(new File("."));
        }
        int ret = fileopen.showDialog(null, "Открыть файл");
        if (ret == JFileChooser.APPROVE_OPTION) {
            fileLinks = fileopen.getSelectedFile().getPath();

            //     JOptionPane.showMessageDialog(null, fileLinks, "Файл выбран", JOptionPane.QUESTION_MESSAGE);
            textSelectFileURL.setText(fileopen.getSelectedFile().getPath());
        }
    }//GEN-LAST:event_buttonSelectFileURLsActionPerformed
    Thread runnable;

    private void buttonStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStartActionPerformed
        reloadloadTextToPars();

        if (fileLinks != null) {
            File file = new File(fileLinks);

            if (file.isFile()) {
                try {
                    // Считываем ссылки

                    String[] FileUrls = Utils.ReadFileToArray(file, textSubr.getText());

                    if ("".equals(projectDirectory) || projectDirectory == null) {
                        JFileChooser chooser = new JFileChooser();
                        chooser.setCurrentDirectory(new java.io.File("."));
                        chooser.setDialogTitle("Выберите директорию для сохранения проекта");
                        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                        chooser.setAcceptAllFileFilterUsed(false);
                        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                            projectDirectory = chooser.getSelectedFile().getAbsoluteFile() + File.separator;
                        } else {
                            projectDirectory = new File(".").getAbsolutePath() + File.separator + new URL(FileUrls[0]).getHost() + File.separator;
                            new File(projectDirectory).mkdir();
                            JOptionPane.showMessageDialog(null, "Проект будет автоматически сохранен в папку " + projectDirectory + " рядом с программй", "Вы не выбрали папку прокта!", JOptionPane.ERROR_MESSAGE);
                        }
                    }

                    // Копируем файл ссылок
                    //Utils.copyFileUsingStream(fileLinks, projectDirectory + "links.csv");
                    textSelectFileURL.setText(projectDirectory + "links.csv");
                    saveProjekt(projectDirectory + "Save.projekt");

                    runnable = new Thread() {

                        @Override
                        public void run() {
                            HTMLParser htmlParser = new HTMLParser(Frame.selectorElements);
                            int tr = 0;

                            int i = 0;

                            long lDelta = 0L;

                            for (String url : FileUrls) {

                                long lBegin = System.currentTimeMillis();

                                int proc = i * 100 / FileUrls.length;
                                progressBarStatus.setValue(proc);
                                labelStatus.setText(proc + "%");
                                labelParsURL.setText(url);

                                try {
                                    htmlParser.addParse(url, projectDirectory);
                                } catch (IOException ex) {
                                    Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
                                }

                                long lEnd = System.currentTimeMillis();
                                lDelta = lEnd - lBegin;

                                int outTovars = FileUrls.length - i;
                                long millis = lDelta * outTovars;
                                long second = (millis / 1000) % 60;
                                long minute = (millis / (1000 * 60)) % 60;
                                long hour = (millis / (1000 * 60 * 60)) % 24;

                                String time = String.format("%02d ч. %02d мин. %02d сек.", hour, minute, second);
                                labelTimeEnd.setText("Времени осталось: " + time);
                                System.err.println("Из " + tr + " потока. Осталось ссылок: " + outTovars
                                        + " | Времени осталось: " + time
                                );
                                System.err.println("Время выполнения: " + lDelta + "мс.");
                                System.out.println("______________________________");
                                i++;
                            }
                            //  Collections.synchronizedList(htmlParserGLobal);
                            tr++;

                            Utils.WriteFile(projectDirectory + "DataBase.json", HTMLParser.getJSON(htmlParser));
                            Utils.WriteFile(projectDirectory + "DataBase.xml", HTMLParser.getXML(htmlParser));
                            JOptionPane.showMessageDialog(null, "Файл записан " + file.getAbsoluteFile(), "Парсинг окончен", JOptionPane.YES_OPTION);
                        }
                    };
                    runnable.start();

                } catch (HeadlessException | MalformedURLException e) {
                    JOptionPane.showMessageDialog(null, "Ошибка чтения файла ссылок!", "Ошибка файла ссылок!\n" + e, JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Выбранный файл не найден!", "Ошибка файла ссылок!", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Выберите файл с ссылкаим!", "Ошибка файла ссылок!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buttonStartActionPerformed


    private void textSelectFileURLFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textSelectFileURLFocusLost
        fileLinks = textSelectFileURL.getText();
    }//GEN-LAST:event_textSelectFileURLFocusLost

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        runnable.interrupt();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        saveProjekt();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        loadProjekt();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void testButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testButtonActionPerformed
        try {
            reloadloadTextToPars();

            HTMLParser htmlParser = new HTMLParser(Frame.selectorElements);
            htmlParser.addParse(urlTestText.getText(), projectDirectory);

            ShowTestOffer modal = new ShowTestOffer(this, true);
            modal.TextAreaXml.setText(htmlParser.getXML());
            modal.TextAreaJson.setText(htmlParser.getJSON());
            modal.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_testButtonActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void nameTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nameTextMouseClicked

        TextInputDialog dialog = new TextInputDialog(this, true);
        dialog.jTextArea1.setText(nameText.getText());
        dialog.setVisible(true);
        nameText.setText(dialog.jTextArea1.getText());

    }//GEN-LAST:event_nameTextMouseClicked

    private void priceTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_priceTextMouseClicked
        TextInputDialog dialog = new TextInputDialog(this, true);
        dialog.jTextArea1.setText(priceText.getText());
        dialog.setVisible(true);
        priceText.setText(dialog.jTextArea1.getText());        // TODO add your handling code here:
    }//GEN-LAST:event_priceTextMouseClicked

    private void priceDataPriceTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_priceDataPriceTextMouseClicked
        TextInputDialog dialog = new TextInputDialog(this, true);
        dialog.jTextArea1.setText(priceDataPriceText.getText());
        dialog.setVisible(true);
        priceDataPriceText.setText(dialog.jTextArea1.getText());            // TODO add your handling code here:
    }//GEN-LAST:event_priceDataPriceTextMouseClicked

    private void priceSizeTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_priceSizeTextMouseClicked
        TextInputDialog dialog = new TextInputDialog(this, true);
        dialog.jTextArea1.setText(priceSizeText.getText());
        dialog.setVisible(true);
        priceSizeText.setText(dialog.jTextArea1.getText());
    }//GEN-LAST:event_priceSizeTextMouseClicked

    private void currencyIdTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_currencyIdTextMouseClicked
        TextInputDialog dialog = new TextInputDialog(this, true);
        dialog.jTextArea1.setText(currencyIdText.getText());
        dialog.setVisible(true);
        currencyIdText.setText(dialog.jTextArea1.getText());       // TODO add your handling code here:
    }//GEN-LAST:event_currencyIdTextMouseClicked

    private void pictureTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pictureTextMouseClicked
        TextInputDialog dialog = new TextInputDialog(this, true);
        dialog.jTextArea1.setText(pictureText.getText());
        dialog.setVisible(true);
        pictureText.setText(dialog.jTextArea1.getText());      // TODO add your handling code here:
    }//GEN-LAST:event_pictureTextMouseClicked

    private void deliveryTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deliveryTextMouseClicked
        TextInputDialog dialog = new TextInputDialog(this, true);
        dialog.jTextArea1.setText(deliveryText.getText());
        dialog.setVisible(true);
        deliveryText.setText(dialog.jTextArea1.getText());      // TODO add your handling code here:
    }//GEN-LAST:event_deliveryTextMouseClicked

    private void categoryIdTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoryIdTextMouseClicked
        TextInputDialog dialog = new TextInputDialog(this, true);
        dialog.jTextArea1.setText(categoryIdText.getText());
        dialog.setVisible(true);
        categoryIdText.setText(dialog.jTextArea1.getText());     // TODO add your handling code here:
    }//GEN-LAST:event_categoryIdTextMouseClicked

    private void vendorTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vendorTextMouseClicked
        TextInputDialog dialog = new TextInputDialog(this, true);
        dialog.jTextArea1.setText(vendorText.getText());
        dialog.setVisible(true);
        vendorText.setText(dialog.jTextArea1.getText());      // TODO add your handling code here:
    }//GEN-LAST:event_vendorTextMouseClicked

    private void descriptionTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_descriptionTextMouseClicked
        TextInputDialog dialog = new TextInputDialog(this, true);
        dialog.jTextArea1.setText(descriptionText.getText());
        dialog.setVisible(true);
        descriptionText.setText(dialog.jTextArea1.getText());      // TODO add your handling code here:
    }//GEN-LAST:event_descriptionTextMouseClicked

    private void paramTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paramTextMouseClicked
        TextInputDialog dialog = new TextInputDialog(this, true);
        dialog.jTextArea1.setText(paramText.getText());
        dialog.setVisible(true);
        paramText.setText(dialog.jTextArea1.getText());     // TODO add your handling code here:
    }//GEN-LAST:event_paramTextMouseClicked

    private void paramValueTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paramValueTextMouseClicked
        TextInputDialog dialog = new TextInputDialog(this, true);
        dialog.jTextArea1.setText(paramValueText.getText());
        dialog.setVisible(true);
        paramValueText.setText(dialog.jTextArea1.getText());     // TODO add your handling code here:
    }//GEN-LAST:event_paramValueTextMouseClicked

    private void paramKeyTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paramKeyTextMouseClicked
        TextInputDialog dialog = new TextInputDialog(this, true);
        dialog.jTextArea1.setText(paramKeyText.getText());
        dialog.setVisible(true);
        paramKeyText.setText(dialog.jTextArea1.getText());      // TODO add your handling code here:
    }//GEN-LAST:event_paramKeyTextMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        Utils.recurceURLS(jTextField1.getText(), 0);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        File file = Utils.FileChooser(projectDirectory);

        YandexOffer[] ya = Utils.JsonToXmlFile(file);
        YandexXML xml = new YandexXML();

        TreeMap<String, String> Categories = new TreeMap<>();
        ArrayList<YandexOffer> Offers = new ArrayList<>();;
        for (int i = 0; i < ya.length; i++) {
            if (!Categories.containsValue(ya[i].categoryId + "")) {
                Categories.put(i + "", ya[i].categoryId + "");
            }

            //   Set<Map.Entry<String, String>> entry = ya[i].price.entrySet();
            //  System.err.println(ya[i].picture.length);
            if (ya[i].picture.length == 0) {
                ya[i] = null;
            }

            if (ya[i] != null) {
                Offers.add(ya[i]);
            }

        }
        Utils.WriteFile(projectDirectory + file.getName() + "JSON.xml", xml.toXml(Offers, Categories));

    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        Runnable runnable1 = () -> {
            File file = Utils.FileChooser(projectDirectory);

            YandexOffer[] ya = Utils.JsonToXmlFile(file);

            HashMap<String, String> Categories = new HashMap<>();
            ArrayList<YandexOffer> Offers = new ArrayList<>();
            for (int i = 0; i < ya.length; i++) {
                if (!Categories.containsValue(ya[i].categoryId + "")) {
                    Categories.put(i + "", ya[i].categoryId + "");
                }

                //   Set<Map.Entry<String, String>> entry = ya[i].price.entrySet();
                for (Map.Entry<String, String> entry : ya[i].price.entrySet()) {
                    if (entry.getValue().equals("") || entry.getValue() == null) {
                        ya[i] = null;

                    }
                }
                if (ya[i] != null) {
                    Offers.add(ya[i]);
                }

            }
            Utils.WriteFile(projectDirectory + file.getName() + ".csv", Utils.JSONtoCSV(Offers, Categories));
        };
        runnable1.run();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        File file = Utils.FileChooser(projectDirectory);

        YandexOffer[] ya = Utils.JsonToXmlFile(file);

        String links = "";

        for (YandexOffer ya1 : ya) {
            links = links + "\n" + ya1.url;
            System.err.println(ya1.url);
        }
        Utils.WriteFile(projectDirectory + file.getName() + "linksisjson.txt", links);

    }//GEN-LAST:event_jMenuItem6ActionPerformed

    /**
     * Сохранение проекта без указания файла (откроется окно для выбора файла)
     */
    private void saveProjekt() {
        reloadloadTextToPars();
        JFileChooser fc = new JFileChooser();

        if (fc.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
            saveProjekt(fc.getSelectedFile().getAbsolutePath());
        }
    }

    /**
     * Сохранение проекта в файл
     *
     * @param file
     */
    private void saveProjekt(String file) {

        // Записываем селекторы в сохранение
        String save
                // Поля селекторов
                = "nameText:" + nameText.getText() + "\n"
                + "priceText:" + priceText.getText() + "\n"
                + "priceDataPriceText:" + priceDataPriceText.getText() + "\n"
                + "priceSizeText:" + priceSizeText.getText() + "\n"
                + "currencyIdText:" + currencyIdText.getText() + "\n"
                + "pictureText:" + pictureText.getText() + "\n"
                + "deliveryText:" + deliveryText.getText() + "\n"
                + "categoryIdText:" + categoryIdText.getText() + "\n"
                + "vendorText:" + vendorText.getText() + "\n"
                + "descriptionText:" + descriptionText.getText() + "\n"
                + "paramText:" + paramText.getText() + "\n"
                + "paramKeyText:" + paramKeyText.getText() + "\n"
                + "paramValueText:" + paramValueText.getText() + "\n"
                // Ссылка для теста
                + "urlTestText:" + urlTestText.getText() + "\n"
                // Путь к файлу ссылок
                + "textSelectFileURL:" + textSelectFileURL.getText() + "\n"
                + "projectPath:" + projectDirectory + "\n";

        Utils.WriteFile(file, save);
    }

    /**
     * Загрузка проекта
     */
    private void loadProjekt() {
        System.out.println("Загрузка проекта..");

        Preferences prefs = Preferences.userRoot().node("/branch/leaf");
        System.out.println(prefs.get("lastProjectPath", ""));;

        JFileChooser fileopen = new JFileChooser();
        if (projectDirectory != null) {
            fileopen.setCurrentDirectory(new File(projectDirectory));
        } else {
            fileopen.setCurrentDirectory(new File("."));
        }
        int ret = fileopen.showDialog(null, "Открыть таблицу селекторов csv");
        if (ret == JFileChooser.APPROVE_OPTION) {
            File file = fileopen.getSelectedFile();

            nameText.setText(Utils.ReadFileKeyToValue(file, "nameText"));
            priceText.setText(Utils.ReadFileKeyToValue(file, "priceText"));
            priceDataPriceText.setText(Utils.ReadFileKeyToValue(file, "priceDataPriceText"));
            priceSizeText.setText(Utils.ReadFileKeyToValue(file, "priceSizeText"));
            currencyIdText.setText(Utils.ReadFileKeyToValue(file, "currencyIdText"));
            pictureText.setText(Utils.ReadFileKeyToValue(file, "pictureText"));
            deliveryText.setText(Utils.ReadFileKeyToValue(file, "deliveryText"));
            categoryIdText.setText(Utils.ReadFileKeyToValue(file, "categoryIdText"));
            vendorText.setText(Utils.ReadFileKeyToValue(file, "vendorText"));
            descriptionText.setText(Utils.ReadFileKeyToValue(file, "descriptionText"));
            paramText.setText(Utils.ReadFileKeyToValue(file, "paramText"));
            paramKeyText.setText(Utils.ReadFileKeyToValue(file, "paramKeyText"));
            paramValueText.setText(Utils.ReadFileKeyToValue(file, "paramValueText"));
            // Ссылка для теста
            urlTestText.setText(Utils.ReadFileKeyToValue(file, "urlTestText"));
            textSelectFileURL.setText(Utils.ReadFileKeyToValue(file, "textSelectFileURL"));

            projectDirectory = Utils.ReadFileKeyToValue(file, "projectPath");
            setTitle(projectDirectory);
            System.out.println("Проект загружен!");
        }
    }

    /**
     * Загружает данные с текстовых полей в переменные
     */
    public static SelectorElements selectorElements;

    private void reloadloadTextToPars() {
        selectorElements = null;

        selectorElements = new SelectorElements(nameText.getText().trim(),
                priceText.getText().trim(),
                priceSizeText.getText().trim(),
                priceDataPriceText.getText().trim(),
                currencyIdText.getText().trim(),
                pictureText.getText().trim(),
                deliveryText.getText().trim(),
                categoryIdText.getText().trim(),
                vendorText.getText().trim(),
                descriptionText.getText().trim(),
                paramText.getText().trim(),
                paramKeyText.getText().trim(),
                paramValueText.getText().trim(),
                urlTestText.getText().trim(),
                textSelectFileURL.getText().trim());
        System.out.println("Загрузили данные в память");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Frame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLabelCategorID;
    private javax.swing.JButton buttonSelectFileURLs;
    private javax.swing.JButton buttonStart;
    private javax.swing.JTextField categoryIdText;
    private javax.swing.JTextField currencyIdText;
    private javax.swing.JTextField deliveryText;
    private javax.swing.JTextField descriptionText;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel labelParsURL;
    private javax.swing.JLabel labelStatus;
    private javax.swing.JLabel labelTimeEnd;
    private javax.swing.JMenu menuEdit;
    private javax.swing.JMenu menuFile;
    private javax.swing.JTextField nameText;
    private javax.swing.JTextField paramKeyText;
    private javax.swing.JTextField paramText;
    private javax.swing.JTextField paramValueText;
    private javax.swing.JTextField pictureText;
    private javax.swing.JTextField priceDataPriceText;
    private javax.swing.JTextField priceSizeText;
    private javax.swing.JTextField priceText;
    private javax.swing.JProgressBar progressBarStatus;
    private javax.swing.JButton testButton;
    private javax.swing.JTextField textSelectFileURL;
    private javax.swing.JTextField textSubr;
    private javax.swing.JTextField urlTestText;
    private javax.swing.JTextField vendorText;
    // End of variables declaration//GEN-END:variables
}
